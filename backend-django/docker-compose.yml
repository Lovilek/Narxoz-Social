version: '3.8'
services:
  web:
    build:
      dockerfile:
        ./Dockerfile
      context: .
    container_name: narxoz_social
    command: sh -c "bash entrypoint.sh"
    ports:
      - 8000:8000
    volumes:
      - media:/app/media
      - static:/app/static
    env_file:
      - .env
    depends_on:
      - mongo
      - postgres
      - redis
    restart: always

  celery1:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: celery
    command: celery -A backend worker -l INFO -Q celery --pool solo  --concurrency 1 -n sched@%h
    volumes:
      - media:/app/media
      - static:/app/static
    env_file:
      - .env
    depends_on:
      - web
      - redis
      - mongo
      - postgres
    restart: always

  celery2:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: celery2
    command:  celery -A backend worker -l INFO -Q push --pool solo --concurrency 1 -n pusher@%h
    volumes:
      - media:/app/media
      - static:/app/static
    env_file:
      - .env
    depends_on:
      - web
      - redis
      - mongo
      - postgres
    restart: always

  celery3:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: celery3
    command:  celery -A backend worker -l INFO -Q mail --pool solo --concurrency 1 -n mailer@%h
    volumes:
      - media:/app/media
      - static:/app/static
    env_file:
      - .env
    depends_on:
      - web
      - redis
      - mongo
      - postgres
    restart: always

  celery-beat:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: celery_beat
    command:  celery -A backend beat  -l INFO
    volumes:
      - media:/app/media
      - static:/app/static
    env_file:
      - .env
    depends_on:
      - web
      - redis
      - mongo
      - postgres
    restart: always

  nginx:
    build:
      dockerfile:
        ./Dockerfile.nginx
      context: .

    container_name: nginx
    ports:
      - 80:80
    volumes:
      - media:/media
      - static:/static
    depends_on:
      - web
    restart: always

  mongo:
    container_name: mongo
    image: mongo:7.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: mysecretpassword
    ports:
      - 27017:27017
    volumes:
      - mongodata:/data/db
    restart: always

  postgres:
    container_name: postgres
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  redis:
    container_name: redis
    image: redis:7
    ports:
      - "6379:6379"
    restart: always
volumes:
  mongodata:
    driver: local
  postgres_data:
    driver: local
  media:
    driver: local
  static:
    driver: local

